{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Allinone_Multiplot","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyPwB7mv7HXhNVLPHFKsI04b"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"D0wnGlV1dBgI","executionInfo":{"status":"ok","timestamp":1643874086332,"user_tz":-330,"elapsed":40,"user":{"displayName":"M.Pranav Phanindra Sai","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjQze1bsZMj8Ib5moVuVSwfSf0pwP39cEoydTmbrA=s64","userId":"03212293503259307576"}}},"outputs":[],"source":["import matplotlib.pyplot as plt\n","import random\n","from matplotlib import style\n","%matplotlib inline\n","import pandas as pd"]},{"cell_type":"code","source":["from sklearn.datasets import load_boston\n","Boston_Dataset = load_boston()\n","Boston_Dataset"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"91hXybmqh5TN","executionInfo":{"status":"ok","timestamp":1643874195848,"user_tz":-330,"elapsed":61,"user":{"displayName":"M.Pranav Phanindra Sai","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjQze1bsZMj8Ib5moVuVSwfSf0pwP39cEoydTmbrA=s64","userId":"03212293503259307576"}},"outputId":"bc66a0a3-95c8-4dce-cbac-8ad29e931c40"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function load_boston is deprecated; `load_boston` is deprecated in 1.0 and will be removed in 1.2.\n","\n","    The Boston housing prices dataset has an ethical problem. You can refer to\n","    the documentation of this function for further details.\n","\n","    The scikit-learn maintainers therefore strongly discourage the use of this\n","    dataset unless the purpose of the code is to study and educate about\n","    ethical issues in data science and machine learning.\n","\n","    In this special case, you can fetch the dataset from the original\n","    source::\n","\n","        import pandas as pd\n","        import numpy as np\n","\n","\n","        data_url = \"http://lib.stat.cmu.edu/datasets/boston\"\n","        raw_df = pd.read_csv(data_url, sep=\"\\s+\", skiprows=22, header=None)\n","        data = np.hstack([raw_df.values[::2, :], raw_df.values[1::2, :2]])\n","        target = raw_df.values[1::2, 2]\n","\n","    Alternative datasets include the California housing dataset (i.e.\n","    :func:`~sklearn.datasets.fetch_california_housing`) and the Ames housing\n","    dataset. You can load the datasets as follows::\n","\n","        from sklearn.datasets import fetch_california_housing\n","        housing = fetch_california_housing()\n","\n","    for the California housing dataset and::\n","\n","        from sklearn.datasets import fetch_openml\n","        housing = fetch_openml(name=\"house_prices\", as_frame=True)\n","\n","    for the Ames housing dataset.\n","    \n","  warnings.warn(msg, category=FutureWarning)\n"]},{"output_type":"execute_result","data":{"text/plain":["{'DESCR': \".. _boston_dataset:\\n\\nBoston house prices dataset\\n---------------------------\\n\\n**Data Set Characteristics:**  \\n\\n    :Number of Instances: 506 \\n\\n    :Number of Attributes: 13 numeric/categorical predictive. Median Value (attribute 14) is usually the target.\\n\\n    :Attribute Information (in order):\\n        - CRIM     per capita crime rate by town\\n        - ZN       proportion of residential land zoned for lots over 25,000 sq.ft.\\n        - INDUS    proportion of non-retail business acres per town\\n        - CHAS     Charles River dummy variable (= 1 if tract bounds river; 0 otherwise)\\n        - NOX      nitric oxides concentration (parts per 10 million)\\n        - RM       average number of rooms per dwelling\\n        - AGE      proportion of owner-occupied units built prior to 1940\\n        - DIS      weighted distances to five Boston employment centres\\n        - RAD      index of accessibility to radial highways\\n        - TAX      full-value property-tax rate per $10,000\\n        - PTRATIO  pupil-teacher ratio by town\\n        - B        1000(Bk - 0.63)^2 where Bk is the proportion of black people by town\\n        - LSTAT    % lower status of the population\\n        - MEDV     Median value of owner-occupied homes in $1000's\\n\\n    :Missing Attribute Values: None\\n\\n    :Creator: Harrison, D. and Rubinfeld, D.L.\\n\\nThis is a copy of UCI ML housing dataset.\\nhttps://archive.ics.uci.edu/ml/machine-learning-databases/housing/\\n\\n\\nThis dataset was taken from the StatLib library which is maintained at Carnegie Mellon University.\\n\\nThe Boston house-price data of Harrison, D. and Rubinfeld, D.L. 'Hedonic\\nprices and the demand for clean air', J. Environ. Economics & Management,\\nvol.5, 81-102, 1978.   Used in Belsley, Kuh & Welsch, 'Regression diagnostics\\n...', Wiley, 1980.   N.B. Various transformations are used in the table on\\npages 244-261 of the latter.\\n\\nThe Boston house-price data has been used in many machine learning papers that address regression\\nproblems.   \\n     \\n.. topic:: References\\n\\n   - Belsley, Kuh & Welsch, 'Regression diagnostics: Identifying Influential Data and Sources of Collinearity', Wiley, 1980. 244-261.\\n   - Quinlan,R. (1993). Combining Instance-Based and Model-Based Learning. In Proceedings on the Tenth International Conference of Machine Learning, 236-243, University of Massachusetts, Amherst. Morgan Kaufmann.\\n\",\n"," 'data': array([[6.3200e-03, 1.8000e+01, 2.3100e+00, ..., 1.5300e+01, 3.9690e+02,\n","         4.9800e+00],\n","        [2.7310e-02, 0.0000e+00, 7.0700e+00, ..., 1.7800e+01, 3.9690e+02,\n","         9.1400e+00],\n","        [2.7290e-02, 0.0000e+00, 7.0700e+00, ..., 1.7800e+01, 3.9283e+02,\n","         4.0300e+00],\n","        ...,\n","        [6.0760e-02, 0.0000e+00, 1.1930e+01, ..., 2.1000e+01, 3.9690e+02,\n","         5.6400e+00],\n","        [1.0959e-01, 0.0000e+00, 1.1930e+01, ..., 2.1000e+01, 3.9345e+02,\n","         6.4800e+00],\n","        [4.7410e-02, 0.0000e+00, 1.1930e+01, ..., 2.1000e+01, 3.9690e+02,\n","         7.8800e+00]]),\n"," 'data_module': 'sklearn.datasets.data',\n"," 'feature_names': array(['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD',\n","        'TAX', 'PTRATIO', 'B', 'LSTAT'], dtype='<U7'),\n"," 'filename': 'boston_house_prices.csv',\n"," 'target': array([24. , 21.6, 34.7, 33.4, 36.2, 28.7, 22.9, 27.1, 16.5, 18.9, 15. ,\n","        18.9, 21.7, 20.4, 18.2, 19.9, 23.1, 17.5, 20.2, 18.2, 13.6, 19.6,\n","        15.2, 14.5, 15.6, 13.9, 16.6, 14.8, 18.4, 21. , 12.7, 14.5, 13.2,\n","        13.1, 13.5, 18.9, 20. , 21. , 24.7, 30.8, 34.9, 26.6, 25.3, 24.7,\n","        21.2, 19.3, 20. , 16.6, 14.4, 19.4, 19.7, 20.5, 25. , 23.4, 18.9,\n","        35.4, 24.7, 31.6, 23.3, 19.6, 18.7, 16. , 22.2, 25. , 33. , 23.5,\n","        19.4, 22. , 17.4, 20.9, 24.2, 21.7, 22.8, 23.4, 24.1, 21.4, 20. ,\n","        20.8, 21.2, 20.3, 28. , 23.9, 24.8, 22.9, 23.9, 26.6, 22.5, 22.2,\n","        23.6, 28.7, 22.6, 22. , 22.9, 25. , 20.6, 28.4, 21.4, 38.7, 43.8,\n","        33.2, 27.5, 26.5, 18.6, 19.3, 20.1, 19.5, 19.5, 20.4, 19.8, 19.4,\n","        21.7, 22.8, 18.8, 18.7, 18.5, 18.3, 21.2, 19.2, 20.4, 19.3, 22. ,\n","        20.3, 20.5, 17.3, 18.8, 21.4, 15.7, 16.2, 18. , 14.3, 19.2, 19.6,\n","        23. , 18.4, 15.6, 18.1, 17.4, 17.1, 13.3, 17.8, 14. , 14.4, 13.4,\n","        15.6, 11.8, 13.8, 15.6, 14.6, 17.8, 15.4, 21.5, 19.6, 15.3, 19.4,\n","        17. , 15.6, 13.1, 41.3, 24.3, 23.3, 27. , 50. , 50. , 50. , 22.7,\n","        25. , 50. , 23.8, 23.8, 22.3, 17.4, 19.1, 23.1, 23.6, 22.6, 29.4,\n","        23.2, 24.6, 29.9, 37.2, 39.8, 36.2, 37.9, 32.5, 26.4, 29.6, 50. ,\n","        32. , 29.8, 34.9, 37. , 30.5, 36.4, 31.1, 29.1, 50. , 33.3, 30.3,\n","        34.6, 34.9, 32.9, 24.1, 42.3, 48.5, 50. , 22.6, 24.4, 22.5, 24.4,\n","        20. , 21.7, 19.3, 22.4, 28.1, 23.7, 25. , 23.3, 28.7, 21.5, 23. ,\n","        26.7, 21.7, 27.5, 30.1, 44.8, 50. , 37.6, 31.6, 46.7, 31.5, 24.3,\n","        31.7, 41.7, 48.3, 29. , 24. , 25.1, 31.5, 23.7, 23.3, 22. , 20.1,\n","        22.2, 23.7, 17.6, 18.5, 24.3, 20.5, 24.5, 26.2, 24.4, 24.8, 29.6,\n","        42.8, 21.9, 20.9, 44. , 50. , 36. , 30.1, 33.8, 43.1, 48.8, 31. ,\n","        36.5, 22.8, 30.7, 50. , 43.5, 20.7, 21.1, 25.2, 24.4, 35.2, 32.4,\n","        32. , 33.2, 33.1, 29.1, 35.1, 45.4, 35.4, 46. , 50. , 32.2, 22. ,\n","        20.1, 23.2, 22.3, 24.8, 28.5, 37.3, 27.9, 23.9, 21.7, 28.6, 27.1,\n","        20.3, 22.5, 29. , 24.8, 22. , 26.4, 33.1, 36.1, 28.4, 33.4, 28.2,\n","        22.8, 20.3, 16.1, 22.1, 19.4, 21.6, 23.8, 16.2, 17.8, 19.8, 23.1,\n","        21. , 23.8, 23.1, 20.4, 18.5, 25. , 24.6, 23. , 22.2, 19.3, 22.6,\n","        19.8, 17.1, 19.4, 22.2, 20.7, 21.1, 19.5, 18.5, 20.6, 19. , 18.7,\n","        32.7, 16.5, 23.9, 31.2, 17.5, 17.2, 23.1, 24.5, 26.6, 22.9, 24.1,\n","        18.6, 30.1, 18.2, 20.6, 17.8, 21.7, 22.7, 22.6, 25. , 19.9, 20.8,\n","        16.8, 21.9, 27.5, 21.9, 23.1, 50. , 50. , 50. , 50. , 50. , 13.8,\n","        13.8, 15. , 13.9, 13.3, 13.1, 10.2, 10.4, 10.9, 11.3, 12.3,  8.8,\n","         7.2, 10.5,  7.4, 10.2, 11.5, 15.1, 23.2,  9.7, 13.8, 12.7, 13.1,\n","        12.5,  8.5,  5. ,  6.3,  5.6,  7.2, 12.1,  8.3,  8.5,  5. , 11.9,\n","        27.9, 17.2, 27.5, 15. , 17.2, 17.9, 16.3,  7. ,  7.2,  7.5, 10.4,\n","         8.8,  8.4, 16.7, 14.2, 20.8, 13.4, 11.7,  8.3, 10.2, 10.9, 11. ,\n","         9.5, 14.5, 14.1, 16.1, 14.3, 11.7, 13.4,  9.6,  8.7,  8.4, 12.8,\n","        10.5, 17.1, 18.4, 15.4, 10.8, 11.8, 14.9, 12.6, 14.1, 13. , 13.4,\n","        15.2, 16.1, 17.8, 14.9, 14.1, 12.7, 13.5, 14.9, 20. , 16.4, 17.7,\n","        19.5, 20.2, 21.4, 19.9, 19. , 19.1, 19.1, 20.1, 19.9, 19.6, 23.2,\n","        29.8, 13.8, 13.3, 16.7, 12. , 14.6, 21.4, 23. , 23.7, 25. , 21.8,\n","        20.6, 21.2, 19.1, 20.6, 15.2,  7. ,  8.1, 13.6, 20.1, 21.8, 24.5,\n","        23.1, 19.7, 18.3, 21.2, 17.5, 16.8, 22.4, 20.6, 23.9, 22. , 11.9])}"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["Boston_Dataset.feature_names\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rm1bvxSgiZSL","executionInfo":{"status":"ok","timestamp":1643874243722,"user_tz":-330,"elapsed":29,"user":{"displayName":"M.Pranav Phanindra Sai","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjQze1bsZMj8Ib5moVuVSwfSf0pwP39cEoydTmbrA=s64","userId":"03212293503259307576"}},"outputId":"c1ee0a39-8223-4d62-b03d-3de5dea83ae2"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD',\n","       'TAX', 'PTRATIO', 'B', 'LSTAT'], dtype='<U7')"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["Boston_Dataset.target"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3xQj2ysrik-y","executionInfo":{"status":"ok","timestamp":1643874258716,"user_tz":-330,"elapsed":25,"user":{"displayName":"M.Pranav Phanindra Sai","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjQze1bsZMj8Ib5moVuVSwfSf0pwP39cEoydTmbrA=s64","userId":"03212293503259307576"}},"outputId":"fcb53c53-90d5-4c67-f071-1961c1f98f1f"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([24. , 21.6, 34.7, 33.4, 36.2, 28.7, 22.9, 27.1, 16.5, 18.9, 15. ,\n","       18.9, 21.7, 20.4, 18.2, 19.9, 23.1, 17.5, 20.2, 18.2, 13.6, 19.6,\n","       15.2, 14.5, 15.6, 13.9, 16.6, 14.8, 18.4, 21. , 12.7, 14.5, 13.2,\n","       13.1, 13.5, 18.9, 20. , 21. , 24.7, 30.8, 34.9, 26.6, 25.3, 24.7,\n","       21.2, 19.3, 20. , 16.6, 14.4, 19.4, 19.7, 20.5, 25. , 23.4, 18.9,\n","       35.4, 24.7, 31.6, 23.3, 19.6, 18.7, 16. , 22.2, 25. , 33. , 23.5,\n","       19.4, 22. , 17.4, 20.9, 24.2, 21.7, 22.8, 23.4, 24.1, 21.4, 20. ,\n","       20.8, 21.2, 20.3, 28. , 23.9, 24.8, 22.9, 23.9, 26.6, 22.5, 22.2,\n","       23.6, 28.7, 22.6, 22. , 22.9, 25. , 20.6, 28.4, 21.4, 38.7, 43.8,\n","       33.2, 27.5, 26.5, 18.6, 19.3, 20.1, 19.5, 19.5, 20.4, 19.8, 19.4,\n","       21.7, 22.8, 18.8, 18.7, 18.5, 18.3, 21.2, 19.2, 20.4, 19.3, 22. ,\n","       20.3, 20.5, 17.3, 18.8, 21.4, 15.7, 16.2, 18. , 14.3, 19.2, 19.6,\n","       23. , 18.4, 15.6, 18.1, 17.4, 17.1, 13.3, 17.8, 14. , 14.4, 13.4,\n","       15.6, 11.8, 13.8, 15.6, 14.6, 17.8, 15.4, 21.5, 19.6, 15.3, 19.4,\n","       17. , 15.6, 13.1, 41.3, 24.3, 23.3, 27. , 50. , 50. , 50. , 22.7,\n","       25. , 50. , 23.8, 23.8, 22.3, 17.4, 19.1, 23.1, 23.6, 22.6, 29.4,\n","       23.2, 24.6, 29.9, 37.2, 39.8, 36.2, 37.9, 32.5, 26.4, 29.6, 50. ,\n","       32. , 29.8, 34.9, 37. , 30.5, 36.4, 31.1, 29.1, 50. , 33.3, 30.3,\n","       34.6, 34.9, 32.9, 24.1, 42.3, 48.5, 50. , 22.6, 24.4, 22.5, 24.4,\n","       20. , 21.7, 19.3, 22.4, 28.1, 23.7, 25. , 23.3, 28.7, 21.5, 23. ,\n","       26.7, 21.7, 27.5, 30.1, 44.8, 50. , 37.6, 31.6, 46.7, 31.5, 24.3,\n","       31.7, 41.7, 48.3, 29. , 24. , 25.1, 31.5, 23.7, 23.3, 22. , 20.1,\n","       22.2, 23.7, 17.6, 18.5, 24.3, 20.5, 24.5, 26.2, 24.4, 24.8, 29.6,\n","       42.8, 21.9, 20.9, 44. , 50. , 36. , 30.1, 33.8, 43.1, 48.8, 31. ,\n","       36.5, 22.8, 30.7, 50. , 43.5, 20.7, 21.1, 25.2, 24.4, 35.2, 32.4,\n","       32. , 33.2, 33.1, 29.1, 35.1, 45.4, 35.4, 46. , 50. , 32.2, 22. ,\n","       20.1, 23.2, 22.3, 24.8, 28.5, 37.3, 27.9, 23.9, 21.7, 28.6, 27.1,\n","       20.3, 22.5, 29. , 24.8, 22. , 26.4, 33.1, 36.1, 28.4, 33.4, 28.2,\n","       22.8, 20.3, 16.1, 22.1, 19.4, 21.6, 23.8, 16.2, 17.8, 19.8, 23.1,\n","       21. , 23.8, 23.1, 20.4, 18.5, 25. , 24.6, 23. , 22.2, 19.3, 22.6,\n","       19.8, 17.1, 19.4, 22.2, 20.7, 21.1, 19.5, 18.5, 20.6, 19. , 18.7,\n","       32.7, 16.5, 23.9, 31.2, 17.5, 17.2, 23.1, 24.5, 26.6, 22.9, 24.1,\n","       18.6, 30.1, 18.2, 20.6, 17.8, 21.7, 22.7, 22.6, 25. , 19.9, 20.8,\n","       16.8, 21.9, 27.5, 21.9, 23.1, 50. , 50. , 50. , 50. , 50. , 13.8,\n","       13.8, 15. , 13.9, 13.3, 13.1, 10.2, 10.4, 10.9, 11.3, 12.3,  8.8,\n","        7.2, 10.5,  7.4, 10.2, 11.5, 15.1, 23.2,  9.7, 13.8, 12.7, 13.1,\n","       12.5,  8.5,  5. ,  6.3,  5.6,  7.2, 12.1,  8.3,  8.5,  5. , 11.9,\n","       27.9, 17.2, 27.5, 15. , 17.2, 17.9, 16.3,  7. ,  7.2,  7.5, 10.4,\n","        8.8,  8.4, 16.7, 14.2, 20.8, 13.4, 11.7,  8.3, 10.2, 10.9, 11. ,\n","        9.5, 14.5, 14.1, 16.1, 14.3, 11.7, 13.4,  9.6,  8.7,  8.4, 12.8,\n","       10.5, 17.1, 18.4, 15.4, 10.8, 11.8, 14.9, 12.6, 14.1, 13. , 13.4,\n","       15.2, 16.1, 17.8, 14.9, 14.1, 12.7, 13.5, 14.9, 20. , 16.4, 17.7,\n","       19.5, 20.2, 21.4, 19.9, 19. , 19.1, 19.1, 20.1, 19.9, 19.6, 23.2,\n","       29.8, 13.8, 13.3, 16.7, 12. , 14.6, 21.4, 23. , 23.7, 25. , 21.8,\n","       20.6, 21.2, 19.1, 20.6, 15.2,  7. ,  8.1, 13.6, 20.1, 21.8, 24.5,\n","       23.1, 19.7, 18.3, 21.2, 17.5, 16.8, 22.4, 20.6, 23.9, 22. , 11.9])"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["Boston_Dataset.DESCR"],"metadata":{"id":"we549bGYjOA8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Boston_DataFrame = pd.DataFrame(Boston_Dataset.data)\n","Boston_DataFrame.columns = Boston_Dataset.feature_names\n","Boston_DataFrame['Target'] = Boston_Dataset.target"],"metadata":{"id":"u2C8RUOpiols","executionInfo":{"status":"ok","timestamp":1643874619273,"user_tz":-330,"elapsed":23,"user":{"displayName":"M.Pranav Phanindra Sai","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjQze1bsZMj8Ib5moVuVSwfSf0pwP39cEoydTmbrA=s64","userId":"03212293503259307576"}}},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":[".. _boston_dataset:\n","\n","Boston house prices dataset\n","---------------------------\n","\n","**Data Set Characteristics:**  \n","\n","    :Number of Instances: 506 \n","\n","    :Number of Attributes: 13 numeric/categorical predictive. Median Value (attribute 14) is usually the target.\n","\n","    :Attribute Information (in order):\n","        - CRIM     per capita crime rate by town\n","        - ZN       proportion of residential land zoned for lots over 25,000 sq.ft.\n","        - INDUS    proportion of non-retail business acres per town\n","        - CHAS     Charles River dummy variable (= 1 if tract bounds river; 0 otherwise)\n","        - NOX      nitric oxides concentration (parts per 10 million)\n","        - RM       average number of rooms per dwelling\n","        - AGE      proportion of owner-occupied units built prior to 1940\n","        - DIS      weighted distances to five Boston employment centres\n","        - RAD      index of accessibility to radial highways\n","        - TAX      full-value property-tax rate per $10,000\n","        - PTRATIO  pupil-teacher ratio by town\n","        - B        1000(Bk - 0.63)^2 where Bk is the proportion of black people by town\n","        - LSTAT    % lower status of the population\n","        - MEDV     Median value of owner-occupied homes in $1000's\n","\n","    :Missing Attribute Values: None\n","\n","    :Creator: Harrison, D. and Rubinfeld, D.L.\n","\n","This is a copy of UCI ML housing dataset.\n","https://archive.ics.uci.edu/ml/machine-learning-databases/housing/\n","\n","\n","This dataset was taken from the StatLib library which is maintained at Carnegie Mellon University.\n","\n","The Boston house-price data of Harrison, D. and Rubinfeld, D.L. 'Hedonic\n","prices and the demand for clean air', J. Environ. Economics & Management,\n","vol.5, 81-102, 1978.   Used in Belsley, Kuh & Welsch, 'Regression diagnostics\n","...', Wiley, 1980.   N.B. Various transformations are used in the table on\n","pages 244-261 of the latter.\n","\n","The Boston house-price data has been used in many machine learning papers that address regression\n","problems.   \n","     \n",".. topic:: References\n","\n","   - Belsley, Kuh & Welsch, 'Regression diagnostics: Identifying Influential Data and Sources of Collinearity', Wiley, 1980. 244-261.\n","   - Quinlan,R. (1993). Combining Instance-Based and Model-Based Learning. In Proceedings on the Tenth International Conference of Machine Learning, 236-243, University of Massachusetts, Amherst. Morgan Kaufmann.\n"],"metadata":{"id":"-_2CEE44kOiO"}},{"cell_type":"code","source":["Boston_DataFrame"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"9qPc3wmzjBa1","executionInfo":{"status":"ok","timestamp":1643874642555,"user_tz":-330,"elapsed":48,"user":{"displayName":"M.Pranav Phanindra Sai","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjQze1bsZMj8Ib5moVuVSwfSf0pwP39cEoydTmbrA=s64","userId":"03212293503259307576"}},"outputId":"5e07fe4b-89aa-40cf-d3ea-29f3551b2e2b"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-cc677ea3-78f3-436d-b2d0-72cb40984c39\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CRIM</th>\n","      <th>ZN</th>\n","      <th>INDUS</th>\n","      <th>CHAS</th>\n","      <th>NOX</th>\n","      <th>RM</th>\n","      <th>AGE</th>\n","      <th>DIS</th>\n","      <th>RAD</th>\n","      <th>TAX</th>\n","      <th>PTRATIO</th>\n","      <th>B</th>\n","      <th>LSTAT</th>\n","      <th>Target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.00632</td>\n","      <td>18.0</td>\n","      <td>2.31</td>\n","      <td>0.0</td>\n","      <td>0.538</td>\n","      <td>6.575</td>\n","      <td>65.2</td>\n","      <td>4.0900</td>\n","      <td>1.0</td>\n","      <td>296.0</td>\n","      <td>15.3</td>\n","      <td>396.90</td>\n","      <td>4.98</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.02731</td>\n","      <td>0.0</td>\n","      <td>7.07</td>\n","      <td>0.0</td>\n","      <td>0.469</td>\n","      <td>6.421</td>\n","      <td>78.9</td>\n","      <td>4.9671</td>\n","      <td>2.0</td>\n","      <td>242.0</td>\n","      <td>17.8</td>\n","      <td>396.90</td>\n","      <td>9.14</td>\n","      <td>21.6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.02729</td>\n","      <td>0.0</td>\n","      <td>7.07</td>\n","      <td>0.0</td>\n","      <td>0.469</td>\n","      <td>7.185</td>\n","      <td>61.1</td>\n","      <td>4.9671</td>\n","      <td>2.0</td>\n","      <td>242.0</td>\n","      <td>17.8</td>\n","      <td>392.83</td>\n","      <td>4.03</td>\n","      <td>34.7</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.03237</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0.0</td>\n","      <td>0.458</td>\n","      <td>6.998</td>\n","      <td>45.8</td>\n","      <td>6.0622</td>\n","      <td>3.0</td>\n","      <td>222.0</td>\n","      <td>18.7</td>\n","      <td>394.63</td>\n","      <td>2.94</td>\n","      <td>33.4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.06905</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0.0</td>\n","      <td>0.458</td>\n","      <td>7.147</td>\n","      <td>54.2</td>\n","      <td>6.0622</td>\n","      <td>3.0</td>\n","      <td>222.0</td>\n","      <td>18.7</td>\n","      <td>396.90</td>\n","      <td>5.33</td>\n","      <td>36.2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>501</th>\n","      <td>0.06263</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0.0</td>\n","      <td>0.573</td>\n","      <td>6.593</td>\n","      <td>69.1</td>\n","      <td>2.4786</td>\n","      <td>1.0</td>\n","      <td>273.0</td>\n","      <td>21.0</td>\n","      <td>391.99</td>\n","      <td>9.67</td>\n","      <td>22.4</td>\n","    </tr>\n","    <tr>\n","      <th>502</th>\n","      <td>0.04527</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0.0</td>\n","      <td>0.573</td>\n","      <td>6.120</td>\n","      <td>76.7</td>\n","      <td>2.2875</td>\n","      <td>1.0</td>\n","      <td>273.0</td>\n","      <td>21.0</td>\n","      <td>396.90</td>\n","      <td>9.08</td>\n","      <td>20.6</td>\n","    </tr>\n","    <tr>\n","      <th>503</th>\n","      <td>0.06076</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0.0</td>\n","      <td>0.573</td>\n","      <td>6.976</td>\n","      <td>91.0</td>\n","      <td>2.1675</td>\n","      <td>1.0</td>\n","      <td>273.0</td>\n","      <td>21.0</td>\n","      <td>396.90</td>\n","      <td>5.64</td>\n","      <td>23.9</td>\n","    </tr>\n","    <tr>\n","      <th>504</th>\n","      <td>0.10959</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0.0</td>\n","      <td>0.573</td>\n","      <td>6.794</td>\n","      <td>89.3</td>\n","      <td>2.3889</td>\n","      <td>1.0</td>\n","      <td>273.0</td>\n","      <td>21.0</td>\n","      <td>393.45</td>\n","      <td>6.48</td>\n","      <td>22.0</td>\n","    </tr>\n","    <tr>\n","      <th>505</th>\n","      <td>0.04741</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0.0</td>\n","      <td>0.573</td>\n","      <td>6.030</td>\n","      <td>80.8</td>\n","      <td>2.5050</td>\n","      <td>1.0</td>\n","      <td>273.0</td>\n","      <td>21.0</td>\n","      <td>396.90</td>\n","      <td>7.88</td>\n","      <td>11.9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>506 rows × 14 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cc677ea3-78f3-436d-b2d0-72cb40984c39')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cc677ea3-78f3-436d-b2d0-72cb40984c39 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cc677ea3-78f3-436d-b2d0-72cb40984c39');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["        CRIM    ZN  INDUS  CHAS    NOX  ...    TAX  PTRATIO       B  LSTAT  Target\n","0    0.00632  18.0   2.31   0.0  0.538  ...  296.0     15.3  396.90   4.98    24.0\n","1    0.02731   0.0   7.07   0.0  0.469  ...  242.0     17.8  396.90   9.14    21.6\n","2    0.02729   0.0   7.07   0.0  0.469  ...  242.0     17.8  392.83   4.03    34.7\n","3    0.03237   0.0   2.18   0.0  0.458  ...  222.0     18.7  394.63   2.94    33.4\n","4    0.06905   0.0   2.18   0.0  0.458  ...  222.0     18.7  396.90   5.33    36.2\n","..       ...   ...    ...   ...    ...  ...    ...      ...     ...    ...     ...\n","501  0.06263   0.0  11.93   0.0  0.573  ...  273.0     21.0  391.99   9.67    22.4\n","502  0.04527   0.0  11.93   0.0  0.573  ...  273.0     21.0  396.90   9.08    20.6\n","503  0.06076   0.0  11.93   0.0  0.573  ...  273.0     21.0  396.90   5.64    23.9\n","504  0.10959   0.0  11.93   0.0  0.573  ...  273.0     21.0  393.45   6.48    22.0\n","505  0.04741   0.0  11.93   0.0  0.573  ...  273.0     21.0  396.90   7.88    11.9\n","\n","[506 rows x 14 columns]"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["style.use('ggplot')\n","plt.figure(figsize=(9,9),edgecolor= 'r')\n","plt.hist(Boston_DataFrame['Target'],bins = 50,histtype='bar',color = 'w')\n","plt.hist(sorted(Boston_DataFrame['Target']),bins = 50,histtype = 'stepfilled',color = 'b')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":537},"id":"_E-a8HcNkGFl","executionInfo":{"status":"ok","timestamp":1643875362130,"user_tz":-330,"elapsed":845,"user":{"displayName":"M.Pranav Phanindra Sai","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjQze1bsZMj8Ib5moVuVSwfSf0pwP39cEoydTmbrA=s64","userId":"03212293503259307576"}},"outputId":"f5a0b1de-709c-4864-8f0f-5cb96bb05398"},"execution_count":24,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 648x648 with 1 Axes>"]},"metadata":{}}]},{"cell_type":"code","source":["style.use('ggplot')\n","plt.figure(figsize=(9,9),edgecolor= 'r')\n","plt.scatter(Boston_DataFrame['AGE'],Boston_Dataset.target)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":556},"id":"QaMMtGBgk6e1","executionInfo":{"status":"ok","timestamp":1643875545126,"user_tz":-330,"elapsed":1012,"user":{"displayName":"M.Pranav Phanindra Sai","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjQze1bsZMj8Ib5moVuVSwfSf0pwP39cEoydTmbrA=s64","userId":"03212293503259307576"}},"outputId":"3d0d944b-c51d-4ba0-fd83-4e14b8d3c8c3"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x7f987c11be90>"]},"metadata":{},"execution_count":27},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 648x648 with 1 Axes>"]},"metadata":{}}]},{"cell_type":"code","source":["import seaborn as sns\n","Data = sns.load_dataset('flights')\n","Data "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"Tc-DrZzonPEK","executionInfo":{"status":"ok","timestamp":1643876141976,"user_tz":-330,"elapsed":49,"user":{"displayName":"M.Pranav Phanindra Sai","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjQze1bsZMj8Ib5moVuVSwfSf0pwP39cEoydTmbrA=s64","userId":"03212293503259307576"}},"outputId":"6f6b17cf-6773-4eba-bb8b-2d0e85359299"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-b60c64b5-7e68-431f-9e02-d0285c9672b6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>month</th>\n","      <th>passengers</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1949</td>\n","      <td>Jan</td>\n","      <td>112</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1949</td>\n","      <td>Feb</td>\n","      <td>118</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1949</td>\n","      <td>Mar</td>\n","      <td>132</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1949</td>\n","      <td>Apr</td>\n","      <td>129</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1949</td>\n","      <td>May</td>\n","      <td>121</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>139</th>\n","      <td>1960</td>\n","      <td>Aug</td>\n","      <td>606</td>\n","    </tr>\n","    <tr>\n","      <th>140</th>\n","      <td>1960</td>\n","      <td>Sep</td>\n","      <td>508</td>\n","    </tr>\n","    <tr>\n","      <th>141</th>\n","      <td>1960</td>\n","      <td>Oct</td>\n","      <td>461</td>\n","    </tr>\n","    <tr>\n","      <th>142</th>\n","      <td>1960</td>\n","      <td>Nov</td>\n","      <td>390</td>\n","    </tr>\n","    <tr>\n","      <th>143</th>\n","      <td>1960</td>\n","      <td>Dec</td>\n","      <td>432</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>144 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b60c64b5-7e68-431f-9e02-d0285c9672b6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b60c64b5-7e68-431f-9e02-d0285c9672b6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b60c64b5-7e68-431f-9e02-d0285c9672b6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["     year month  passengers\n","0    1949   Jan         112\n","1    1949   Feb         118\n","2    1949   Mar         132\n","3    1949   Apr         129\n","4    1949   May         121\n","..    ...   ...         ...\n","139  1960   Aug         606\n","140  1960   Sep         508\n","141  1960   Oct         461\n","142  1960   Nov         390\n","143  1960   Dec         432\n","\n","[144 rows x 3 columns]"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["type(Data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HLsJdPDPolQr","executionInfo":{"status":"ok","timestamp":1643876175426,"user_tz":-330,"elapsed":491,"user":{"displayName":"M.Pranav Phanindra Sai","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjQze1bsZMj8Ib5moVuVSwfSf0pwP39cEoydTmbrA=s64","userId":"03212293503259307576"}},"outputId":"c42e0650-7172-456b-c756-933906e23cb7"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["pandas.core.frame.DataFrame"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["Heat_Data = Data.pivot('year','month','passengers')"],"metadata":{"id":"Ly_e_0YOpIKS","executionInfo":{"status":"ok","timestamp":1643876168539,"user_tz":-330,"elapsed":484,"user":{"displayName":"M.Pranav Phanindra Sai","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjQze1bsZMj8Ib5moVuVSwfSf0pwP39cEoydTmbrA=s64","userId":"03212293503259307576"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["Heat_Data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":457},"id":"4qctKfGypk0k","executionInfo":{"status":"ok","timestamp":1643876195602,"user_tz":-330,"elapsed":558,"user":{"displayName":"M.Pranav Phanindra Sai","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjQze1bsZMj8Ib5moVuVSwfSf0pwP39cEoydTmbrA=s64","userId":"03212293503259307576"}},"outputId":"d7c597b2-7d45-4a03-c3ab-d1edb1b233b6"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-7d3c5e66-f8b0-4383-bbcf-715d88b5e036\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>month</th>\n","      <th>Jan</th>\n","      <th>Feb</th>\n","      <th>Mar</th>\n","      <th>Apr</th>\n","      <th>May</th>\n","      <th>Jun</th>\n","      <th>Jul</th>\n","      <th>Aug</th>\n","      <th>Sep</th>\n","      <th>Oct</th>\n","      <th>Nov</th>\n","      <th>Dec</th>\n","    </tr>\n","    <tr>\n","      <th>year</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1949</th>\n","      <td>112</td>\n","      <td>118</td>\n","      <td>132</td>\n","      <td>129</td>\n","      <td>121</td>\n","      <td>135</td>\n","      <td>148</td>\n","      <td>148</td>\n","      <td>136</td>\n","      <td>119</td>\n","      <td>104</td>\n","      <td>118</td>\n","    </tr>\n","    <tr>\n","      <th>1950</th>\n","      <td>115</td>\n","      <td>126</td>\n","      <td>141</td>\n","      <td>135</td>\n","      <td>125</td>\n","      <td>149</td>\n","      <td>170</td>\n","      <td>170</td>\n","      <td>158</td>\n","      <td>133</td>\n","      <td>114</td>\n","      <td>140</td>\n","    </tr>\n","    <tr>\n","      <th>1951</th>\n","      <td>145</td>\n","      <td>150</td>\n","      <td>178</td>\n","      <td>163</td>\n","      <td>172</td>\n","      <td>178</td>\n","      <td>199</td>\n","      <td>199</td>\n","      <td>184</td>\n","      <td>162</td>\n","      <td>146</td>\n","      <td>166</td>\n","    </tr>\n","    <tr>\n","      <th>1952</th>\n","      <td>171</td>\n","      <td>180</td>\n","      <td>193</td>\n","      <td>181</td>\n","      <td>183</td>\n","      <td>218</td>\n","      <td>230</td>\n","      <td>242</td>\n","      <td>209</td>\n","      <td>191</td>\n","      <td>172</td>\n","      <td>194</td>\n","    </tr>\n","    <tr>\n","      <th>1953</th>\n","      <td>196</td>\n","      <td>196</td>\n","      <td>236</td>\n","      <td>235</td>\n","      <td>229</td>\n","      <td>243</td>\n","      <td>264</td>\n","      <td>272</td>\n","      <td>237</td>\n","      <td>211</td>\n","      <td>180</td>\n","      <td>201</td>\n","    </tr>\n","    <tr>\n","      <th>1954</th>\n","      <td>204</td>\n","      <td>188</td>\n","      <td>235</td>\n","      <td>227</td>\n","      <td>234</td>\n","      <td>264</td>\n","      <td>302</td>\n","      <td>293</td>\n","      <td>259</td>\n","      <td>229</td>\n","      <td>203</td>\n","      <td>229</td>\n","    </tr>\n","    <tr>\n","      <th>1955</th>\n","      <td>242</td>\n","      <td>233</td>\n","      <td>267</td>\n","      <td>269</td>\n","      <td>270</td>\n","      <td>315</td>\n","      <td>364</td>\n","      <td>347</td>\n","      <td>312</td>\n","      <td>274</td>\n","      <td>237</td>\n","      <td>278</td>\n","    </tr>\n","    <tr>\n","      <th>1956</th>\n","      <td>284</td>\n","      <td>277</td>\n","      <td>317</td>\n","      <td>313</td>\n","      <td>318</td>\n","      <td>374</td>\n","      <td>413</td>\n","      <td>405</td>\n","      <td>355</td>\n","      <td>306</td>\n","      <td>271</td>\n","      <td>306</td>\n","    </tr>\n","    <tr>\n","      <th>1957</th>\n","      <td>315</td>\n","      <td>301</td>\n","      <td>356</td>\n","      <td>348</td>\n","      <td>355</td>\n","      <td>422</td>\n","      <td>465</td>\n","      <td>467</td>\n","      <td>404</td>\n","      <td>347</td>\n","      <td>305</td>\n","      <td>336</td>\n","    </tr>\n","    <tr>\n","      <th>1958</th>\n","      <td>340</td>\n","      <td>318</td>\n","      <td>362</td>\n","      <td>348</td>\n","      <td>363</td>\n","      <td>435</td>\n","      <td>491</td>\n","      <td>505</td>\n","      <td>404</td>\n","      <td>359</td>\n","      <td>310</td>\n","      <td>337</td>\n","    </tr>\n","    <tr>\n","      <th>1959</th>\n","      <td>360</td>\n","      <td>342</td>\n","      <td>406</td>\n","      <td>396</td>\n","      <td>420</td>\n","      <td>472</td>\n","      <td>548</td>\n","      <td>559</td>\n","      <td>463</td>\n","      <td>407</td>\n","      <td>362</td>\n","      <td>405</td>\n","    </tr>\n","    <tr>\n","      <th>1960</th>\n","      <td>417</td>\n","      <td>391</td>\n","      <td>419</td>\n","      <td>461</td>\n","      <td>472</td>\n","      <td>535</td>\n","      <td>622</td>\n","      <td>606</td>\n","      <td>508</td>\n","      <td>461</td>\n","      <td>390</td>\n","      <td>432</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7d3c5e66-f8b0-4383-bbcf-715d88b5e036')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7d3c5e66-f8b0-4383-bbcf-715d88b5e036 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7d3c5e66-f8b0-4383-bbcf-715d88b5e036');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["month  Jan  Feb  Mar  Apr  May  Jun  Jul  Aug  Sep  Oct  Nov  Dec\n","year                                                             \n","1949   112  118  132  129  121  135  148  148  136  119  104  118\n","1950   115  126  141  135  125  149  170  170  158  133  114  140\n","1951   145  150  178  163  172  178  199  199  184  162  146  166\n","1952   171  180  193  181  183  218  230  242  209  191  172  194\n","1953   196  196  236  235  229  243  264  272  237  211  180  201\n","1954   204  188  235  227  234  264  302  293  259  229  203  229\n","1955   242  233  267  269  270  315  364  347  312  274  237  278\n","1956   284  277  317  313  318  374  413  405  355  306  271  306\n","1957   315  301  356  348  355  422  465  467  404  347  305  336\n","1958   340  318  362  348  363  435  491  505  404  359  310  337\n","1959   360  342  406  396  420  472  548  559  463  407  362  405\n","1960   417  391  419  461  472  535  622  606  508  461  390  432"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["sns.heatmap(Heat_Data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":301},"id":"9JSKxiXYqBH2","executionInfo":{"status":"ok","timestamp":1643876228142,"user_tz":-330,"elapsed":1023,"user":{"displayName":"M.Pranav Phanindra Sai","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjQze1bsZMj8Ib5moVuVSwfSf0pwP39cEoydTmbrA=s64","userId":"03212293503259307576"}},"outputId":"d1c871d8-8f9c-47bf-d311-6981301f69e8"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f987c69d090>"]},"metadata":{},"execution_count":40},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{}}]},{"cell_type":"code","source":["Time = ['4','8','10','2']\n","Label = ['Mobile','Sleep','Classes','Misc']\n","plt.pie(Time,labels = Label)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":407},"id":"5up8Kaa2qHmG","executionInfo":{"status":"ok","timestamp":1643876401131,"user_tz":-330,"elapsed":689,"user":{"displayName":"M.Pranav Phanindra Sai","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjQze1bsZMj8Ib5moVuVSwfSf0pwP39cEoydTmbrA=s64","userId":"03212293503259307576"}},"outputId":"574c0ea9-7bef-4c99-af7d-9359e87aebba"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["([<matplotlib.patches.Wedge at 0x7f987c503190>,\n","  <matplotlib.patches.Wedge at 0x7f987c4f1bd0>,\n","  <matplotlib.patches.Wedge at 0x7f987c4f18d0>,\n","  <matplotlib.patches.Wedge at 0x7f987c4f1310>],\n"," [Text(0.9526279355804298, 0.5500000148652441, 'Mobile'),\n","  Text(-0.5500000594609755, 0.9526279098330699, 'Sleep'),\n","  Text(-0.28470088329267024, -1.062518426688391, 'Classes'),\n","  Text(1.0625184200244853, -0.2847009081627096, 'Misc')])"]},"metadata":{},"execution_count":41},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{}}]},{"cell_type":"code","source":[""],"metadata":{"id":"wo7k4goDqzX6"},"execution_count":null,"outputs":[]}]}